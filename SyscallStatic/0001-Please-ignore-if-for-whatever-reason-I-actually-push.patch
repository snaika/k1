From ea6a37646f8aacb89eb4ef3ce4df8949655b8ea0 Mon Sep 17 00:00:00 2001
From: lethe <lethe@debian8vm>
Date: Sun, 11 Oct 2015 14:29:59 +0200
Subject: [PATCH] Please ignore if for whatever reason I actually push this

---
 arch/x86/entry/syscalls/syscall_64.tbl |  1 +
 arch/x86/kernel/Makefile               |  1 +
 arch/x86/kernel/uptime.c               | 15 +++++++++++++++
 include/linux/syscalls.h               |  1 +
 4 files changed, 18 insertions(+)
 create mode 100644 arch/x86/kernel/uptime.c

diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index 278842f..322e01d 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -331,6 +331,7 @@
 322	64	execveat		stub_execveat
 323	common	userfaultfd		sys_userfaultfd
 324	common	membarrier		sys_membarrier
+325	64	uptime			sys_uptime
 
 #
 # x32-specific system call numbers start at 512 to avoid cache impact
diff --git a/arch/x86/kernel/Makefile b/arch/x86/kernel/Makefile
index b1b78ff..c4f52cb 100644
--- a/arch/x86/kernel/Makefile
+++ b/arch/x86/kernel/Makefile
@@ -109,6 +109,7 @@ obj-$(CONFIG_EFI)			+= sysfb_efi.o
 
 obj-$(CONFIG_PERF_EVENTS)		+= perf_regs.o
 obj-$(CONFIG_TRACING)			+= tracepoint.o
+obj-y					+= uptime.o
 
 ###
 # 64 bit specific files
diff --git a/arch/x86/kernel/uptime.c b/arch/x86/kernel/uptime.c
new file mode 100644
index 0000000..9c4e4ca
--- /dev/null
+++ b/arch/x86/kernel/uptime.c
@@ -0,0 +1,15 @@
+#include <linux/kernel.h>
+#include <linux/time.h>
+#include <linux/hrtimer.h>
+
+time_t sys_uptime(time_t *t)
+{
+  struct timespec uptime;
+  uptime.tv_sec = -1;
+  get_monotonic_boottime(&uptime);
+
+  if (t != NULL)
+    *t = uptime.tv_sec;
+    
+  return uptime.tv_sec;
+}
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index a460e2e..b2018d1 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -886,5 +886,6 @@ asmlinkage long sys_execveat(int dfd, const char __user *filename,
 			const char __user *const __user *envp, int flags);
 
 asmlinkage long sys_membarrier(int cmd, int flags);
+asmlinkage time_t sys_update(time_t *t);
 
 #endif
-- 
2.1.4

